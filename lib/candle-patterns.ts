import { ProcessedCandle } from './binance';

export interface CandlePatternInfo {
  name: string;
  type: 'BULLISH' | 'BEARISH' | 'NEUTRAL';
  reliability: number; // 1-5 stars
  description: string;
  tradingImplication: string;
  when_to_trade: string;
  icon: string;
}

export interface DetectedPattern {
  pattern: CandlePatternInfo;
  confidence: number; // 0-100
  position: number; // Index in candles array where pattern was found
}

export const CANDLE_PATTERNS: Record<string, CandlePatternInfo> = {
  DOJI: {
    name: 'Doji',
    type: 'NEUTRAL',
    reliability: 3,
    description: '‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏•‡∏∞‡∏õ‡∏¥‡∏î‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡∏ï‡∏•‡∏≤‡∏î',
    tradingImplication: '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏á‡πÄ‡∏•‡∏Ç‡∏≠‡∏á‡∏ï‡∏•‡∏≤‡∏î ‡∏£‡∏≠‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°',
    when_to_trade: '‡∏£‡∏≠‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ',
    icon: 'üü°'
  },
  
  HAMMER: {
    name: 'Hammer',
    type: 'BULLISH',
    reliability: 4,
    description: '‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏´‡∏≤‡∏á‡∏•‡πà‡∏≤‡∏á‡∏¢‡∏≤‡∏ß‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡πÄ‡∏•‡πá‡∏Å ‡∏û‡∏ö‡∏ó‡∏µ‡πà‡∏à‡∏∏‡∏î‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå‡∏•‡∏á',
    tradingImplication: '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÅ‡∏£‡∏á‡∏Ç‡∏≤‡∏¢‡∏≠‡πà‡∏≠‡∏ô‡∏•‡∏á ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤',
    when_to_trade: '‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏û‡∏ö‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏î‡∏±‡∏ö support ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå‡∏•‡∏á‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß',
    icon: 'üü¢'
  },
  
  SHOOTING_STAR: {
    name: 'Shooting Star',
    type: 'BEARISH',
    reliability: 4,
    description: '‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏´‡∏≤‡∏á‡∏ö‡∏ô‡∏¢‡∏≤‡∏ß‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡πÄ‡∏•‡πá‡∏Å ‡∏û‡∏ö‡∏ó‡∏µ‡πà‡∏à‡∏∏‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå‡∏Ç‡∏∂‡πâ‡∏ô',
    tradingImplication: '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏•‡∏á ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÅ‡∏£‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏≠‡πà‡∏≠‡∏ô‡∏•‡∏á ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤',
    when_to_trade: '‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏Ç‡∏≤‡∏¢‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏û‡∏ö‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏î‡∏±‡∏ö resistance ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå‡∏Ç‡∏∂‡πâ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß',
    icon: 'üî¥'
  },
  
  BULLISH_ENGULFING: {
    name: 'Bullish Engulfing',
    type: 'BULLISH',
    reliability: 5,
    description: '‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏Ç‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏´‡∏ç‡πà‡∏ó‡∏µ‡πà‡∏Å‡∏•‡∏∑‡∏ô‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏Ç‡∏≤‡∏•‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
    tradingImplication: '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á ‡πÅ‡∏£‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏≠‡∏≤‡∏ä‡∏ô‡∏∞‡πÅ‡∏£‡∏á‡∏Ç‡∏≤‡∏¢',
    when_to_trade: '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏î‡∏±‡∏ö support ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç',
    icon: 'üü¢'
  },
  
  BEARISH_ENGULFING: {
    name: 'Bearish Engulfing',
    type: 'BEARISH',
    reliability: 5,
    description: '‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏Ç‡∏≤‡∏•‡∏á‡πÉ‡∏´‡∏ç‡πà‡∏ó‡∏µ‡πà‡∏Å‡∏•‡∏∑‡∏ô‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏Ç‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
    tradingImplication: '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏•‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á ‡πÅ‡∏£‡∏á‡∏Ç‡∏≤‡∏¢‡πÄ‡∏≠‡∏≤‡∏ä‡∏ô‡∏∞‡πÅ‡∏£‡∏á‡∏ã‡∏∑‡πâ‡∏≠',
    when_to_trade: '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏Ç‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏î‡∏±‡∏ö resistance ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç',
    icon: 'üî¥'
  },

  MORNING_STAR: {
    name: 'Morning Star',
    type: 'BULLISH',
    reliability: 5,
    description: '‡πÅ‡∏û‡∏ó‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô 3 ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô: ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡πÅ‡∏î‡∏á‡∏¢‡∏≤‡∏ß, ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡πÄ‡∏•‡πá‡∏Å, ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏¢‡∏≤‡∏ß',
    tradingImplication: '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á‡∏°‡∏≤‡∏Å ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏ã‡∏∑‡πâ‡∏≠',
    when_to_trade: '‡∏ã‡∏∑‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà 3 ‡∏õ‡∏¥‡∏î ‡∏ï‡∏±‡πâ‡∏á stop loss ‡∏ó‡∏µ‡πà‡∏à‡∏∏‡∏î‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î',
    icon: 'üü¢'
  },

  EVENING_STAR: {
    name: 'Evening Star',
    type: 'BEARISH',
    reliability: 5,
    description: '‡πÅ‡∏û‡∏ó‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô 3 ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô: ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏¢‡∏≤‡∏ß, ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡πÄ‡∏•‡πá‡∏Å, ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡πÅ‡∏î‡∏á‡∏¢‡∏≤‡∏ß',
    tradingImplication: '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏•‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á‡∏°‡∏≤‡∏Å ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢',
    when_to_trade: '‡∏Ç‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà 3 ‡∏õ‡∏¥‡∏î ‡∏ï‡∏±‡πâ‡∏á stop loss ‡∏ó‡∏µ‡πà‡∏à‡∏∏‡∏î‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î',
    icon: 'üî¥'
  },

  THREE_WHITE_SOLDIERS: {
    name: 'Three White Soldiers',
    type: 'BULLISH',
    reliability: 4,
    description: '3 ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏ï‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏π‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢‡πÜ ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏£‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á',
    tradingImplication: '‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á ‡πÅ‡∏£‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á',
    when_to_trade: '‡πÄ‡∏Ç‡πâ‡∏≤‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ pullback ‡∏´‡∏£‡∏∑‡∏≠ breakout ‡∏Ç‡∏≠‡∏á resistance',
    icon: 'üü¢'
  },

  THREE_BLACK_CROWS: {
    name: 'Three Black Crows',
    type: 'BEARISH',
    reliability: 4,
    description: '3 ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡πÅ‡∏î‡∏á‡∏ï‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡πà‡∏≥‡∏•‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢‡πÜ ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏£‡∏á‡∏Ç‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á',
    tradingImplication: '‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå‡∏•‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á ‡πÅ‡∏£‡∏á‡∏Ç‡∏≤‡∏¢‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á',
    when_to_trade: '‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ rally ‡∏´‡∏£‡∏∑‡∏≠ breakdown ‡∏Ç‡∏≠‡∏á support',
    icon: 'üî¥'
  },

  SPINNING_TOP: {
    name: 'Spinning Top',
    type: 'NEUTRAL',
    reliability: 2,
    description: '‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡πá‡∏Å‡πÅ‡∏•‡∏∞‡∏´‡∏≤‡∏á‡∏ö‡∏ô-‡∏•‡πà‡∏≤‡∏á‡∏¢‡∏≤‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡πÜ ‡∏Å‡∏±‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏á‡πÄ‡∏•',
    tradingImplication: '‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡∏ï‡∏•‡∏≤‡∏î ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏Å‡∏ï‡∏±‡∏ß‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå‡∏ï‡πà‡∏≠',
    when_to_trade: '‡∏£‡∏≠‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏û‡∏ã‡∏¥‡∏ä‡∏±‡πà‡∏ô‡πÉ‡∏´‡∏°‡πà',
    icon: 'üü°'
  },

  MARUBOZU_BULLISH: {
    name: 'Bullish Marubozu',
    type: 'BULLISH',
    reliability: 4,
    description: '‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏¢‡∏≤‡∏ß‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏≤‡∏á‡∏ö‡∏ô‡πÅ‡∏•‡∏∞‡∏•‡πà‡∏≤‡∏á ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏£‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á',
    tradingImplication: '‡πÅ‡∏£‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏∏‡∏î‡∏à‡∏±‡∏î ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡∏•‡∏≠‡∏î‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤',
    when_to_trade: '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå‡∏Ç‡∏∂‡πâ‡∏ô',
    icon: 'üü¢'
  },

  MARUBOZU_BEARISH: {
    name: 'Bearish Marubozu',
    type: 'BEARISH',
    reliability: 4,
    description: '‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡πÅ‡∏î‡∏á‡∏¢‡∏≤‡∏ß‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏≤‡∏á‡∏ö‡∏ô‡πÅ‡∏•‡∏∞‡∏•‡πà‡∏≤‡∏á ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏£‡∏á‡∏Ç‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á',
    tradingImplication: '‡πÅ‡∏£‡∏á‡∏Ç‡∏≤‡∏¢‡∏™‡∏∏‡∏î‡∏à‡∏±‡∏î ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏•‡∏á‡∏ï‡∏•‡∏≠‡∏î‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤',
    when_to_trade: '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏Ç‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå‡∏•‡∏á',
    icon: 'üî¥'
  }
};

export class CandlePatternAnalyzer {
  static detectPatterns(candles: ProcessedCandle[]): DetectedPattern[] {
    const patterns: DetectedPattern[] = [];
    
    if (candles.length < 1) return patterns;

    // Single candle patterns
    const lastCandle = candles[candles.length - 1];
    
    // Doji detection (improved)
    const bodySize = Math.abs(lastCandle.close - lastCandle.open);
    const fullRange = lastCandle.high - lastCandle.low;
    
    if (bodySize < fullRange * 0.1 && fullRange > 0) {
      patterns.push({
        pattern: CANDLE_PATTERNS.DOJI,
        confidence: 85,
        position: candles.length - 1
      });
    }

    // Hammer detection (improved)
    const upperWick = lastCandle.high - Math.max(lastCandle.open, lastCandle.close);
    const lowerWick = Math.min(lastCandle.open, lastCandle.close) - lastCandle.low;
    
    if (lowerWick > bodySize * 2 && upperWick < bodySize * 0.5 && bodySize > 0) {
      patterns.push({
        pattern: CANDLE_PATTERNS.HAMMER,
        confidence: 80,
        position: candles.length - 1
      });
    }

    // Shooting Star detection (improved)
    if (upperWick > bodySize * 2 && lowerWick < bodySize * 0.5 && bodySize > 0) {
      patterns.push({
        pattern: CANDLE_PATTERNS.SHOOTING_STAR,
        confidence: 80,
        position: candles.length - 1
      });
    }

    // Marubozu detection
    if (upperWick < fullRange * 0.01 && lowerWick < fullRange * 0.01) {
      if (lastCandle.close > lastCandle.open) {
        patterns.push({
          pattern: CANDLE_PATTERNS.MARUBOZU_BULLISH,
          confidence: 90,
          position: candles.length - 1
        });
      } else if (lastCandle.close < lastCandle.open) {
        patterns.push({
          pattern: CANDLE_PATTERNS.MARUBOZU_BEARISH,
          confidence: 90,
          position: candles.length - 1
        });
      }
    }

    // Spinning Top detection
    if (upperWick > bodySize * 1.5 && lowerWick > bodySize * 1.5 && 
        Math.abs(upperWick - lowerWick) < fullRange * 0.3) {
      patterns.push({
        pattern: CANDLE_PATTERNS.SPINNING_TOP,
        confidence: 70,
        position: candles.length - 1
      });
    }

    // Two candle patterns
    if (candles.length >= 2) {
      const prevCandle = candles[candles.length - 2];
      
      // Bullish Engulfing (improved)
      if (prevCandle.close < prevCandle.open && // Previous was bearish
          lastCandle.close > lastCandle.open &&   // Current is bullish
          lastCandle.close > prevCandle.open &&   // Current close > prev open
          lastCandle.open < prevCandle.close &&   // Current open < prev close
          Math.abs(lastCandle.close - lastCandle.open) > Math.abs(prevCandle.close - prevCandle.open) * 1.1) {
        patterns.push({
          pattern: CANDLE_PATTERNS.BULLISH_ENGULFING,
          confidence: 90,
          position: candles.length - 1
        });
      }
      
      // Bearish Engulfing (improved)
      if (prevCandle.close > prevCandle.open && // Previous was bullish
          lastCandle.close < lastCandle.open &&   // Current is bearish
          lastCandle.close < prevCandle.open &&   // Current close < prev open
          lastCandle.open > prevCandle.close &&   // Current open > prev close
          Math.abs(lastCandle.close - lastCandle.open) > Math.abs(prevCandle.close - prevCandle.open) * 1.1) {
        patterns.push({
          pattern: CANDLE_PATTERNS.BEARISH_ENGULFING,
          confidence: 90,
          position: candles.length - 1
        });
      }
    }

    // Three candle patterns
    if (candles.length >= 3) {
      const candle1 = candles[candles.length - 3];
      const candle2 = candles[candles.length - 2];
      const candle3 = candles[candles.length - 1];
      
      // Morning Star
      if (candle1.close < candle1.open && // First candle bearish
          Math.abs(candle2.close - candle2.open) < (candle2.high - candle2.low) * 0.3 && // Second candle small body
          candle3.close > candle3.open && // Third candle bullish
          candle3.close > (candle1.open + candle1.close) / 2) { // Third closes above midpoint of first
        patterns.push({
          pattern: CANDLE_PATTERNS.MORNING_STAR,
          confidence: 95,
          position: candles.length - 1
        });
      }
      
      // Evening Star
      if (candle1.close > candle1.open && // First candle bullish
          Math.abs(candle2.close - candle2.open) < (candle2.high - candle2.low) * 0.3 && // Second candle small body
          candle3.close < candle3.open && // Third candle bearish
          candle3.close < (candle1.open + candle1.close) / 2) { // Third closes below midpoint of first
        patterns.push({
          pattern: CANDLE_PATTERNS.EVENING_STAR,
          confidence: 95,
          position: candles.length - 1
        });
      }

      // Three White Soldiers
      if (candle1.close > candle1.open &&
          candle2.close > candle2.open &&
          candle3.close > candle3.open &&
          candle2.open > candle1.close * 0.99 &&
          candle2.open < candle1.close * 1.01 &&
          candle3.open > candle2.close * 0.99 &&
          candle3.open < candle2.close * 1.01) {
        patterns.push({
          pattern: CANDLE_PATTERNS.THREE_WHITE_SOLDIERS,
          confidence: 85,
          position: candles.length - 1
        });
      }

      // Three Black Crows
      if (candle1.close < candle1.open &&
          candle2.close < candle2.open &&
          candle3.close < candle3.open &&
          candle2.open < candle1.close * 1.01 &&
          candle2.open > candle1.close * 0.99 &&
          candle3.open < candle2.close * 1.01 &&
          candle3.open > candle2.close * 0.99) {
        patterns.push({
          pattern: CANDLE_PATTERNS.THREE_BLACK_CROWS,
          confidence: 85,
          position: candles.length - 1
        });
      }
    }

    return patterns;
  }

  static getReliabilityStars(reliability: number): string {
    return '‚≠ê'.repeat(Math.max(1, Math.min(5, reliability)));
  }

  static getPatternTypeColor(type: 'BULLISH' | 'BEARISH' | 'NEUTRAL'): string {
    switch (type) {
      case 'BULLISH': return 'text-green-400 bg-green-900/20';
      case 'BEARISH': return 'text-red-400 bg-red-900/20';
      case 'NEUTRAL': return 'text-yellow-400 bg-yellow-900/20';
    }
  }
}